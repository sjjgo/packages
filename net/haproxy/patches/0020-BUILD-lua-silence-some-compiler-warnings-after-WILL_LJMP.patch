commit 3f39e1d4b5ca37e57247034421c69bc301d996b2
Author: Willy Tarreau <w@1wt.eu>
Date:   Tue Oct 16 17:57:36 2018 +0200

    BUILD: lua: silence some compiler warnings after WILL_LJMP
    
    These ones are on error paths that are properly handled by luaL_error()
    which does a longjmp() but the compiler cannot know it. By adding an
    __unreachable() statement in WILL_LJMP(), there is no ambiguity anymore.
    
    This may be backported to 1.8 but these previous patches are needed first :
      - BUILD: compiler: add a new statement "__unreachable()"
      - MINOR: lua: all functions calling lua_yieldk() may return
      - BUILD: lua: silence some compiler warnings about potential null derefs (#2)
    
    (cherry picked from commit b059b894cdf795f134b6e53ff95ea7f907feb846)
    Signed-off-by: Willy Tarreau <w@1wt.eu>

diff --git a/src/hlua.c b/src/hlua.c
index ad9238ef..c3bb269a 100644
--- a/src/hlua.c
+++ b/src/hlua.c
@@ -24,6 +24,7 @@
 #include <ebpttree.h>
 
 #include <common/cfgparse.h>
+#include <common/compiler.h>
 #include <common/xref.h>
 #include <common/hathreads.h>
 
@@ -63,7 +64,7 @@
  *   MAY_LJMP() marks an lua function that may use longjmp.
  */
 #define __LJMP
-#define WILL_LJMP(func) func
+#define WILL_LJMP(func) do { func; __unreachable(); } while(0)
 #define MAY_LJMP(func) func
 
 /* This couple of function executes securely some Lua calls outside of
